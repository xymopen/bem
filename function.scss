@import "config";

// BEM support Func

/// @see {@link [Combinators](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors#Combinators "CSS selectors")} -
$__selector-combinators: ("+", "~", ">", "||");

@function __selector-ensure($selector) {
  @if null == $selector {
    @return selector-parse("");
  } @else {
    @return $selector;
  }
}

@function bem($block, $element: null, $modifier: null) {
    $level: "#{$namespace}#{$block}";

    @if (null != $element) {
        $level: "#{$level}#{$element-separator}#{$element}";
    }

    @if (null != $modifier) {
        $level: "#{$level}#{$modifier-separator}#{$modifier}";
    }

    @return $level;
}

@function bem-extend($selectors, $extendee, $extender) {
  $returns: ();

  @for $i from 1 through length($selectors) {
    $selector: nth($selectors, $i);
    $selector-len: length($selector);

    @if nth($selector, $selector-len) == $extendee {
      @if $selector-len >= 2 {
        @if index($__selector-combinators, nth($selector, $selector-len - 1)) == null {
          $returns: append($returns, set-nth($selector, $selector-len, $extender), "comma");
        } @else {
          $returns: append($returns, append($selector, $extender), "comma");
        }
      } @else {
        $returns: append($returns, ($extender), "comma");
      }
    } @else {
      $returns: append($returns, append($selector, $extender), "comma");
    }
  }

  @return $returns;
}
